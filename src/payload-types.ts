/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    pages: Page;
    jobAds: JobAd;
    blogPosts: BlogPost;
    categories: Category;
    forms: Form;
    'form-submissions': FormSubmission;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    pages: PagesSelect<false> | PagesSelect<true>;
    jobAds: JobAdsSelect<false> | JobAdsSelect<true>;
    blogPosts: BlogPostsSelect<false> | BlogPostsSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    forms: FormsSelect<false> | FormsSelect<true>;
    'form-submissions': FormSubmissionsSelect<false> | FormSubmissionsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    navbar: Navbar;
    footer: Footer;
  };
  globalsSelect: {
    navbar: NavbarSelect<false> | NavbarSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
  };
  locale: 'hr' | 'en' | 'es' | 'de' | 'pl' | 'pt' | 'uk' | 'ru' | 'fr' | 'it';
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  name?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  title: string;
  slug?: string | null;
  slugLock?: boolean | null;
  content?:
    | (
        | LanderHero
        | TrustBlock
        | ServicesBlock
        | JobBoardBlock
        | IndustriesBlock
        | TestimonialsBlock
        | WorkersTestimonialsBlock
        | FAQBlock
        | WhyChooseUsBlock
        | ProcessBlock
        | TableBlock
        | BenefitsBlock
        | CTABlock
        | FormBlock
      )[]
    | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LanderHero".
 */
export interface LanderHero {
  title?: string | null;
  subtitle?: string | null;
  links?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?: {
            relationTo: 'pages';
            value: number | Page;
          } | null;
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  backgroundImage?: (number | null) | Media;
  stats?:
    | {
        stat?: {
          value?: string | null;
          label?: string | null;
        };
        id?: string | null;
      }[]
    | null;
  logos?:
    | {
        logo?: (number | null) | Media;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'LanderHero';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TrustBlock".
 */
export interface TrustBlock {
  title: string;
  description: string;
  companyLogos: {
    logo: number | Media;
    id?: string | null;
  }[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'TrustBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ServicesBlock".
 */
export interface ServicesBlock {
  title: string;
  subtitle: string;
  description: string;
  backgroundImage?: (number | null) | Media;
  imageIcons?:
    | {
        icon: number | Media;
        id?: string | null;
      }[]
    | null;
  icons?:
    | {
        icon: number | Media;
        title: string;
        description: string;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'ServicesBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "JobBoardBlock".
 */
export interface JobBoardBlock {
  title: string;
  subtitle: string;
  description: string;
  links?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?: {
            relationTo: 'pages';
            value: number | Page;
          } | null;
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'JobBoardBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "IndustriesBlock".
 */
export interface IndustriesBlock {
  title: string;
  description: string;
  subtitle: string;
  countriesTitle: string;
  industries?:
    | {
        image: number | Media;
        title: string;
        description: string;
        id?: string | null;
      }[]
    | null;
  countries?:
    | {
        country: string;
        flag: number | Media;
        id?: string | null;
      }[]
    | null;
  seoLine: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'IndustriesBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TestimonialsBlock".
 */
export interface TestimonialsBlock {
  title: string;
  subtitle: string;
  testimonials?:
    | {
        personImage: number | Media;
        companyLogo: number | Media;
        personName: string;
        personTitle: string;
        testimonial: string;
        numberOfStars: number;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'TestimonialsBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "WorkersTestimonialsBlock".
 */
export interface WorkersTestimonialsBlock {
  title: string;
  subtitle: string;
  testimonials?:
    | {
        personImage: number | Media;
        countryFlag: number | Media;
        personName: string;
        personTitle: string;
        testimonial: string;
        numberOfStars: number;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'WorkersTestimonialsBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FAQBlock".
 */
export interface FAQBlock {
  title: string;
  description: string;
  faqs?:
    | {
        question: string;
        answer: string;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'FAQBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "WhyChooseUsBlock".
 */
export interface WhyChooseUsBlock {
  dark?: boolean | null;
  title?: string | null;
  reasons?:
    | {
        text: string;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'WhyChooseUsBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ProcessBlock".
 */
export interface ProcessBlock {
  dark: boolean;
  title: string;
  steps?:
    | {
        title: string;
        description: string;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'ProcessBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TableBlock".
 */
export interface TableBlock {
  dark: boolean;
  title: string;
  columns: {
    label: string;
    id?: string | null;
  }[];
  rows: {
    cells: {
      value: string;
      id?: string | null;
    }[];
    icon?: string | null;
    id?: string | null;
  }[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'TableBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BenefitsBlock".
 */
export interface BenefitsBlock {
  dark?: boolean | null;
  title?: string | null;
  items: {
    text: string;
    id?: string | null;
  }[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'BenefitsBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CTABlock".
 */
export interface CTABlock {
  dark?: boolean | null;
  title: string;
  subtitle?: string | null;
  links?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?: {
            relationTo: 'pages';
            value: number | Page;
          } | null;
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'CTABlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock".
 */
export interface FormBlock {
  form: number | Form;
  enableIntro?: boolean | null;
  introContent?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'FormBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: number;
  title: string;
  fields?:
    | (
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            defaultValue?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'checkbox';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'country';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'email';
          }
        | {
            message?: {
              root: {
                type: string;
                children: {
                  type: any;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'message';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'number';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            placeholder?: string | null;
            options?:
              | {
                  label: string;
                  value: string;
                  id?: string | null;
                }[]
              | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'select';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'state';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'text';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textarea';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            options?:
              | {
                  label: string;
                  value: string;
                  id?: string | null;
                }[]
              | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'radio';
          }
      )[]
    | null;
  submitButtonLabel?: string | null;
  /**
   * Choose whether to display an on-page message or redirect to a different page after they submit the form.
   */
  confirmationType?: ('message' | 'redirect') | null;
  confirmationMessage?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  redirect?: {
    type?: ('reference' | 'custom') | null;
    reference?:
      | ({
          relationTo: 'pages';
          value: number | Page;
        } | null)
      | ({
          relationTo: 'blogPosts';
          value: number | BlogPost;
        } | null);
    url?: string | null;
  };
  /**
   * Send custom emails when the form submits. Use comma separated lists to send the same email to multiple recipients. To reference a value from this form, wrap that field's name with double curly brackets, i.e. {{firstName}}. You can use a wildcard {{*}} to output all data and {{*:table}} to format it as an HTML table in the email.
   */
  emails?:
    | {
        emailTo?: string | null;
        cc?: string | null;
        bcc?: string | null;
        replyTo?: string | null;
        emailFrom?: string | null;
        subject: string;
        /**
         * Enter the message that should be sent in this email.
         */
        message?: {
          root: {
            type: string;
            children: {
              type: any;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blogPosts".
 */
export interface BlogPost {
  id: number;
  title: string;
  categories?: (number | Category)[] | null;
  headerImage?: (number | null) | Media;
  headerTheme?: ('light' | 'dark') | null;
  author?: (number | null) | User;
  publishedAt?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  content: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  meta?: {
    title?: string | null;
    description?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: number;
  name: string;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "jobAds".
 */
export interface JobAd {
  id: number;
  title: string;
  slug?: string | null;
  slugLock?: boolean | null;
  location: string;
  employmentType: 'full_time' | 'seasonal' | 'temporary';
  industry: string;
  numberOfOpenings: number;
  description?: string | null;
  shortDescription: string;
  benefits: string;
  status?: ('active' | 'inactive') | null;
  translated?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmission {
  id: number;
  form: number | Form;
  submissionData?:
    | {
        field: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null)
    | ({
        relationTo: 'jobAds';
        value: number | JobAd;
      } | null)
    | ({
        relationTo: 'blogPosts';
        value: number | BlogPost;
      } | null)
    | ({
        relationTo: 'categories';
        value: number | Category;
      } | null)
    | ({
        relationTo: 'forms';
        value: number | Form;
      } | null)
    | ({
        relationTo: 'form-submissions';
        value: number | FormSubmission;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  slugLock?: T;
  content?:
    | T
    | {
        LanderHero?: T | LanderHeroSelect<T>;
        TrustBlock?: T | TrustBlockSelect<T>;
        ServicesBlock?: T | ServicesBlockSelect<T>;
        JobBoardBlock?: T | JobBoardBlockSelect<T>;
        IndustriesBlock?: T | IndustriesBlockSelect<T>;
        TestimonialsBlock?: T | TestimonialsBlockSelect<T>;
        WorkersTestimonialsBlock?: T | WorkersTestimonialsBlockSelect<T>;
        FAQBlock?: T | FAQBlockSelect<T>;
        WhyChooseUsBlock?: T | WhyChooseUsBlockSelect<T>;
        ProcessBlock?: T | ProcessBlockSelect<T>;
        TableBlock?: T | TableBlockSelect<T>;
        BenefitsBlock?: T | BenefitsBlockSelect<T>;
        CTABlock?: T | CTABlockSelect<T>;
        FormBlock?: T | FormBlockSelect<T>;
      };
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LanderHero_select".
 */
export interface LanderHeroSelect<T extends boolean = true> {
  title?: T;
  subtitle?: T;
  links?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  backgroundImage?: T;
  stats?:
    | T
    | {
        stat?:
          | T
          | {
              value?: T;
              label?: T;
            };
        id?: T;
      };
  logos?:
    | T
    | {
        logo?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TrustBlock_select".
 */
export interface TrustBlockSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  companyLogos?:
    | T
    | {
        logo?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ServicesBlock_select".
 */
export interface ServicesBlockSelect<T extends boolean = true> {
  title?: T;
  subtitle?: T;
  description?: T;
  backgroundImage?: T;
  imageIcons?:
    | T
    | {
        icon?: T;
        id?: T;
      };
  icons?:
    | T
    | {
        icon?: T;
        title?: T;
        description?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "JobBoardBlock_select".
 */
export interface JobBoardBlockSelect<T extends boolean = true> {
  title?: T;
  subtitle?: T;
  description?: T;
  links?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "IndustriesBlock_select".
 */
export interface IndustriesBlockSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  subtitle?: T;
  countriesTitle?: T;
  industries?:
    | T
    | {
        image?: T;
        title?: T;
        description?: T;
        id?: T;
      };
  countries?:
    | T
    | {
        country?: T;
        flag?: T;
        id?: T;
      };
  seoLine?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TestimonialsBlock_select".
 */
export interface TestimonialsBlockSelect<T extends boolean = true> {
  title?: T;
  subtitle?: T;
  testimonials?:
    | T
    | {
        personImage?: T;
        companyLogo?: T;
        personName?: T;
        personTitle?: T;
        testimonial?: T;
        numberOfStars?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "WorkersTestimonialsBlock_select".
 */
export interface WorkersTestimonialsBlockSelect<T extends boolean = true> {
  title?: T;
  subtitle?: T;
  testimonials?:
    | T
    | {
        personImage?: T;
        countryFlag?: T;
        personName?: T;
        personTitle?: T;
        testimonial?: T;
        numberOfStars?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FAQBlock_select".
 */
export interface FAQBlockSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  faqs?:
    | T
    | {
        question?: T;
        answer?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "WhyChooseUsBlock_select".
 */
export interface WhyChooseUsBlockSelect<T extends boolean = true> {
  dark?: T;
  title?: T;
  reasons?:
    | T
    | {
        text?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ProcessBlock_select".
 */
export interface ProcessBlockSelect<T extends boolean = true> {
  dark?: T;
  title?: T;
  steps?:
    | T
    | {
        title?: T;
        description?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TableBlock_select".
 */
export interface TableBlockSelect<T extends boolean = true> {
  dark?: T;
  title?: T;
  columns?:
    | T
    | {
        label?: T;
        id?: T;
      };
  rows?:
    | T
    | {
        cells?:
          | T
          | {
              value?: T;
              id?: T;
            };
        icon?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BenefitsBlock_select".
 */
export interface BenefitsBlockSelect<T extends boolean = true> {
  dark?: T;
  title?: T;
  items?:
    | T
    | {
        text?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CTABlock_select".
 */
export interface CTABlockSelect<T extends boolean = true> {
  dark?: T;
  title?: T;
  subtitle?: T;
  links?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock_select".
 */
export interface FormBlockSelect<T extends boolean = true> {
  form?: T;
  enableIntro?: T;
  introContent?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "jobAds_select".
 */
export interface JobAdsSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  slugLock?: T;
  location?: T;
  employmentType?: T;
  industry?: T;
  numberOfOpenings?: T;
  description?: T;
  shortDescription?: T;
  benefits?: T;
  status?: T;
  translated?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blogPosts_select".
 */
export interface BlogPostsSelect<T extends boolean = true> {
  title?: T;
  categories?: T;
  headerImage?: T;
  headerTheme?: T;
  author?: T;
  publishedAt?: T;
  slug?: T;
  slugLock?: T;
  content?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms_select".
 */
export interface FormsSelect<T extends boolean = true> {
  title?: T;
  fields?:
    | T
    | {
        checkbox?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              defaultValue?: T;
              id?: T;
              blockName?: T;
            };
        country?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        email?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        message?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        number?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        select?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              placeholder?: T;
              options?:
                | T
                | {
                    label?: T;
                    value?: T;
                    id?: T;
                  };
              required?: T;
              id?: T;
              blockName?: T;
            };
        state?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        text?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        textarea?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        radio?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              options?:
                | T
                | {
                    label?: T;
                    value?: T;
                    id?: T;
                  };
              required?: T;
              id?: T;
              blockName?: T;
            };
      };
  submitButtonLabel?: T;
  confirmationType?: T;
  confirmationMessage?: T;
  redirect?:
    | T
    | {
        type?: T;
        reference?: T;
        url?: T;
      };
  emails?:
    | T
    | {
        emailTo?: T;
        cc?: T;
        bcc?: T;
        replyTo?: T;
        emailFrom?: T;
        subject?: T;
        message?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions_select".
 */
export interface FormSubmissionsSelect<T extends boolean = true> {
  form?: T;
  submissionData?:
    | T
    | {
        field?: T;
        value?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "navbar".
 */
export interface Navbar {
  id: number;
  logo?: (number | null) | Media;
  links?:
    | {
        type: 'singleLink' | 'linkGroup';
        singleLinkContent?: {
          link: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?: {
              relationTo: 'pages';
              value: number | Page;
            } | null;
            url?: string | null;
            label: string;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline' | 'link') | null;
          };
        };
        linkGroupContent?: {
          label?: string | null;
          links?:
            | {
                link: {
                  type?: ('reference' | 'custom') | null;
                  newTab?: boolean | null;
                  reference?: {
                    relationTo: 'pages';
                    value: number | Page;
                  } | null;
                  url?: string | null;
                  label: string;
                  /**
                   * Choose how the link should be rendered.
                   */
                  appearance?: ('default' | 'outline' | 'link') | null;
                };
                id?: string | null;
              }[]
            | null;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: number;
  logo?: (number | null) | Media;
  links?:
    | {
        type: 'singleLink' | 'linkGroup';
        singleLinkContent?: {
          link: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?: {
              relationTo: 'pages';
              value: number | Page;
            } | null;
            url?: string | null;
            label: string;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline' | 'link') | null;
          };
        };
        linkGroupContent?: {
          label?: string | null;
          links?:
            | {
                link: {
                  type?: ('reference' | 'custom') | null;
                  newTab?: boolean | null;
                  reference?: {
                    relationTo: 'pages';
                    value: number | Page;
                  } | null;
                  url?: string | null;
                  label: string;
                  /**
                   * Choose how the link should be rendered.
                   */
                  appearance?: ('default' | 'outline' | 'link') | null;
                };
                id?: string | null;
              }[]
            | null;
        };
        id?: string | null;
      }[]
    | null;
  copyright?: string | null;
  socialLinks?: {
    instagram?: string | null;
    facebook?: string | null;
    twitter?: string | null;
    linkedin?: string | null;
    youtube?: string | null;
    tiktok?: string | null;
    whatsapp?: string | null;
    telegram?: string | null;
  };
  contactInfo?: {
    addresses?:
      | {
          address?: {
            addressText?: string | null;
            addressLink?: string | null;
          };
          id?: string | null;
        }[]
      | null;
    phones?:
      | {
          phone?: {
            phoneText?: string | null;
            phoneLink?: string | null;
          };
          id?: string | null;
        }[]
      | null;
    emails?:
      | {
          email?: {
            emailText?: string | null;
            emailLink?: string | null;
          };
          id?: string | null;
        }[]
      | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "navbar_select".
 */
export interface NavbarSelect<T extends boolean = true> {
  logo?: T;
  links?:
    | T
    | {
        type?: T;
        singleLinkContent?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    appearance?: T;
                  };
            };
        linkGroupContent?:
          | T
          | {
              label?: T;
              links?:
                | T
                | {
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          appearance?: T;
                        };
                    id?: T;
                  };
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  logo?: T;
  links?:
    | T
    | {
        type?: T;
        singleLinkContent?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    appearance?: T;
                  };
            };
        linkGroupContent?:
          | T
          | {
              label?: T;
              links?:
                | T
                | {
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          appearance?: T;
                        };
                    id?: T;
                  };
            };
        id?: T;
      };
  copyright?: T;
  socialLinks?:
    | T
    | {
        instagram?: T;
        facebook?: T;
        twitter?: T;
        linkedin?: T;
        youtube?: T;
        tiktok?: T;
        whatsapp?: T;
        telegram?: T;
      };
  contactInfo?:
    | T
    | {
        addresses?:
          | T
          | {
              address?:
                | T
                | {
                    addressText?: T;
                    addressLink?: T;
                  };
              id?: T;
            };
        phones?:
          | T
          | {
              phone?:
                | T
                | {
                    phoneText?: T;
                    phoneLink?: T;
                  };
              id?: T;
            };
        emails?:
          | T
          | {
              email?:
                | T
                | {
                    emailText?: T;
                    emailLink?: T;
                  };
              id?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock".
 */
export interface MediaBlock {
  media: number | Media;
  caption?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'MediaBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}